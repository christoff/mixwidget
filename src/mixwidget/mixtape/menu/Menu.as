/* The contents of this file are subject to the Common Public Attribution * License Version 1.0. (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://mixwidget.com/license. The License is based on the Mozilla Public * License Version 1.1, but Sections 14 and 15 have been added to cover use of * software over a computer network and provide for limited attribution for the * Original Developer. In addition, Exhibit A has been modified to be consistent * with Exhibit B. *  * Software distributed under the License is distributed on an "AS IS" basis, * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for * the specific language governing rights and limitations under the License. *  * The Original Code is Mixwidget. *  * The Original Developers are Michael Christoff & Radley Marx.  The Initial  * Developers of the Original Code are Michael Christoff & Radley Marx. */package mixwidget.mixtape.menu{	  import fl.transitions.easing.*;
  
  import flash.display.MovieClip;
  import flash.display.SimpleButton;
  import flash.display.Sprite;
  import flash.events.Event;
  import flash.events.MouseEvent;
  
  import mixwidget.media.FlashAudioPlayer;
  import mixwidget.util.Util;
  import mixwidget.mixtape.menu.Playlist;  public class Menu extends MovieClip{		public var backDrop:MovieClip;				public var closeBtn:SimpleButton;		public var tab:Sprite;		public var logo:Sprite;		public var menuBorder:Sprite;		public var menuTabsBg:Sprite;		public var mixes:MovieClip;		public var favorites:MovieClip;		public var playlist:MovieClip;		public var follow:MovieClip;				public var widgetID:String;		public var playlistID:String;				public var activeMenu:String = null;				private var menuArray:Array;			  private var widgetXml:XML;		private var widgets:XMLList;			  private var widgetUserID:String = "";	  	  private var player:FlashAudioPlayer;			public function Menu(player:FlashAudioPlayer)    {						    	Util.d();    	menuArray = new Array();    	this.player = player;    	createMenus();    }				private function createMenus():void		{			closeBtn.addEventListener(MouseEvent.CLICK, hideWidgetMenu);			createPlaylist();		}				private function createPlaylist():void		{			playlist = new Playlist(this.player);			playlist.name = "playlist";			playlist.visible = true;						//ToolTip.attach(playlistBtn, 'playlist');						this.addChildAt(playlist, this.numChildren - 1);						playlist.init();			//playlist.addEventListener("trackSelected", onTrackSelect);			//playlistBtn.addEventListener(MouseEvent.CLICK, onMouseClick);						menuArray.push(playlist);		}				public function showWidgetMenu():void		{						playlist.visible = true;		}				private function hideWidgetMenu(event:MouseEvent):void		{						playlist.visible = false;			dispatchEvent(new Event("onMenuClose"));		}	}}