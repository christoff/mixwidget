/* The contents of this file are subject to the Common Public Attribution * License Version 1.0. (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://mixwidget.com/license. The License is based on the Mozilla Public * License Version 1.1, but Sections 14 and 15 have been added to cover use of * software over a computer network and provide for limited attribution for the * Original Developer. In addition, Exhibit A has been modified to be consistent * with Exhibit B. *  * Software distributed under the License is distributed on an "AS IS" basis, * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for * the specific language governing rights and limitations under the License. *  * The Original Code is Mixwidget. *  * The Original Developers are Michael Christoff & Radley Marx.  The Initial  * Developers of the Original Code are Michael Christoff & Radley Marx. */package mixwidget.mixtape.menu{		import flash.display.MovieClip;
	import flash.display.Sprite;
	import flash.geom.ColorTransform;
	import flash.text.TextField;
	import flash.text.TextFormat;    public class AudioListItem extends MovieClip    {			//XSPF namespace stuff      namespace xspf = "http://xspf.org/ns/0/";      use namespace xspf;						public var bg:Sprite;			public var bgSelected:Sprite;						private var TXT_COLOR:Number = 0x888888;			private var ALT_TXT_COLOR:Number = 0xFFFFFF;			private var ALT_BG_COLOR:Number = 0xFFFFFF;						private var _xml:XML;						private var _id:Number;						private var _active:Boolean = false;						public var titleTxt:TextField;						private var _format:TextFormat = new TextFormat();			private var _myColor:ColorTransform;						public function AudioListItem()			{										bgSelected.visible = false;								_myColor = new ColorTransform();							}						public function config(newXml:XML, count:int, narrow:Boolean):void			{								_xml = newXml;								setBgColor(count);								titleTxt.htmlText = _xml.title + " by " + _xml.creator;								if (titleTxt.textHeight > 12) { titleTxt.y = 0; };			}						private function setBgColor(count:int):void			{								if (count % 2) {									_myColor.color = ALT_BG_COLOR;					bg.transform.colorTransform = _myColor;				}							}						public function get id():Number			{				return _id;			}						public function set id(value:Number):void			{				_id = value;			}						public function set active(value:Boolean):void			{				_active = value;				bgSelected.visible = value;								if (value)				{					_format.color = ALT_TXT_COLOR;					titleTxt.setTextFormat(_format);				}				else				{					_format.color = TXT_COLOR;					titleTxt.setTextFormat(_format);				}			}	}}